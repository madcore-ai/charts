AWSTemplateFormatVersion: 2010-09-09
Description: GPU cluster
Parameters:
  VpcId:
    Type: String
    AllowedPattern: vpc-[a-f0-9]{8}
    ConstraintDescription: Must be valid VPC identifier vpc-xxxxxxxx
    Description: The ID of the MadCore Virtual Private Network.
  S3BucketName:
    Type: String
    ConstraintDescription: Must be valid S3 bucket name.
    Description: S3 bucket name.
  KeyName:
    Type: String
    Description: Valid AWS KeyPair name.
  SecurityGroupCIRD:
    Type: String
    Description: IP address of cluster nodes.
    AllowedPattern: "\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}/\\d{2}"
    ConstraintDescription: Must be a valid CIDR IP address xx.xx.xx.xx
    MaxLength: '15'
    MinLength: '1'
  MasterIP:
    Type: String
    Description: Master IP of the cluster
    AllowedPattern: "\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}"
    ConstraintDescription: Must be a valid CIDR IP address xx.xx.xx.xx
    MaxLength: '15'
    MinLength: '1'
  SpotPrice:
    Description: 'Maximum spot price to bid in USD (e.g.: 0.32).'
    Default: '0.02'
    Type: Number
  InstanceType:
    Description: 'EC2 PV instance type (m3.medium, etc). Note: m1.small is not supported.'
    Type: String
    Default: p2.xlarge
    AllowedValues: [p2.xlarge, g2.2xlarge]
    ConstraintDescription: 'Must be a valid EC2 PV instance type. Note: m1.small is not supported.'
  PublicNetZoneA:
    Type: String
    AllowedPattern: subnet-[a-f0-9]{8}
    ConstraintDescription: Must be valid security group identifier sg-xxxxxxxx
    Description: Madcore-Cluster Public Subnet Zone A
  MinSize:
    Type: Number
    Description: Autoscale MinSize
  MaxSize:
    Type: Number
    Description: Autoscale MaxSize
  DesiredCapacity:
    Type: Number
    Description: Autoscale DesiredCapacity
Mappings:
  AmazonAiAMI:
    eu-west-1:
      AMI: ami-41570b32
    us-east-1:
      AMI: ami-7cb9896b
    us-west-2:
      AMI: ami-edb11e8d
Resources:
  MadcoreClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ ec2.amazonaws.com ]
          Action: ['sts:AssumeRole']
      Path: "/"
      Policies:
      - PolicyName: policy-madcore-cluster
        PolicyDocument:
          Statement:
          - Action: ['ec2:DescribeTags', 'ec2:DescribeInstances', 'ec2:StartInstances', 'ec2:StopInstances']
            Effect: Allow
            Resource: '*'
          - Effect: Allow
            Action: ['s3:GetObject', 's3:GetObjectAcl', 's3:PutObject', 's3:PutObjectAcl']
            Resource: 
            - !Sub arn:aws:s3:::${S3BucketName}
            - !Sub arn:aws:s3:::${S3BucketName}/*
  MadcoreClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: [!Ref MadcoreClusterRole]
  MadcoreClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Provides Madcore Cluster access
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: SG-madcore-cluster
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: !Ref SecurityGroupCIRD
  MadcoreClusterAutoScalingLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      ImageId:
        Fn::FindInMap:
        - AmazonAiAMI
        - !Ref AWS::Region
        - AMI
      IamInstanceProfile: !Ref MadcoreClusterInstanceProfile
      SecurityGroups: [!Ref MadcoreClusterSecurityGroup]
      InstanceType: !Ref InstanceType
      SpotPrice: !Ref SpotPrice
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '20'
      KeyName: !Ref KeyName
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -v
            # Madcore GPU Node Pre Configure
            # Maintained by Madcore Ltd (humans@madcore.ai)
            echo ENV=AWS >> /etc/environment
            echo KUB_MASTER_IP=${MasterIP} >> /etc/environment
            echo S3_BUCKET=${S3BucketName} >> /etc/environment
            # PRECONFIGURE madcore
            mkdir -p /opt/madcore
            git clone https://github.com/madcore-ai/plugins.git /opt/madcore
            # INSTALL dl4j prerequisites
            # maven only, git and jre are pre-installed into Deep Learning AMI
            wget -c http://apache-mirror.rbc.ru/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
            tar zxf apache-maven-3.3.9-bin.tar.gz
            mv apache-maven-3.3.9 /usr/local
            chown -R root.root /usr/local/apache-maven-3.3.9
            ln -s /usr/local/apache-maven-3.3.9/bin/mvn /usr/local/bin/
  MadcoreClusterAutoScalingServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref MadcoreClusterAutoScalingLaunchConfiguration
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      DesiredCapacity: !Ref DesiredCapacity
      VPCZoneIdentifier:
      - Ref: PublicNetZoneA
      Tags:
      - Key: Name
        Value: MADCORE-GPU-Node
        PropagateAtLaunch: 'true'
      - Key: Cluster
        Value: MADCORE-GPU
        PropagateAtLaunch: 'true'
Outputs:
  MinSize:
    Value: !Ref MinSize
  MaxSize:
    Value: !Ref MaxSize
  DesiredCapacity:
    Value: !Ref DesiredCapacity
