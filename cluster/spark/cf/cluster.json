{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Spark cluster",
  "Parameters": {
    "VpcId": {
      "Type": "String",
      "AllowedPattern": "vpc-[a-f0-9]{8}",
      "ConstraintDescription": "Must be valid VPC identifier vpc-xxxxxxxx",
      "Description": "The ID of the MadCore Virtual Private Network."
    },
    "S3BucketName": {
      "Type": "String",
      "ConstraintDescription": "Must be valid S3 bucket name.",
      "Description": "S3 bucket name."
    },
    "KeyName": {
      "Type": "String",
      "Description": "Valid AWS KeyPair name."
    },
    "SecurityGroupCIRD": {
      "Type": "String",
      "Description": "IP address of cluster nodes.",
      "AllowedPattern": "\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}/\\d{2}",
      "ConstraintDescription": "Must be a valid CIDR IP address xx.xx.xx.xx",
      "MaxLength": "15",
      "MinLength": "1"
    },
    "MasterIP": {
      "Type": "String",
      "Description": "Master IP of the cluster",
      "AllowedPattern": "\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}+\\.\\d{1,3}",
      "ConstraintDescription": "Must be a valid CIDR IP address xx.xx.xx.xx",
      "MaxLength": "15",
      "MinLength": "1"
    },
    "SpotPrice": {
      "Description": "Maximum spot price to bid in USD (e.g.: 0.32).",
      "Default": "0.02",
      "Type": "Number"
    },
    "InstanceType": {
      "Description": "EC2 PV instance type (m3.medium, etc). Note: m1.small is not supported.",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "m3.medium",
        "m4.xlarge",
        "r3.large"
      ],
      "ConstraintDescription": "Must be a valid EC2 PV instance type. Note: m1.small is not supported."
    },
    "PublicNetZoneA": {
      "Type": "String",
      "AllowedPattern": "subnet-[a-f0-9]{8}",
      "ConstraintDescription": "Must be valid security group identifier sg-xxxxxxxx",
      "Description": "Madcore-Cluster Public Subnet Zone A"
    },
    "MinSize": {
      "Type": "Number",
      "Description": "Autoscale MinSize"
    },
    "MaxSize": {
      "Type": "Number",
      "Description": "Autoscale MaxSize"
    },
    "DesiredCapacity": {
      "Type": "Number",
      "Description": "Autoscale DesiredCapacity"
    },
    "BranchName": {
      "Type": "String",
      "Default": "master",
      "Description": "Cluster repo branch name"
    },
    "CommitID": {
      "Type": "String",
      "Default": "FETCH_HEAD",
      "Description": "Cluster repo commit id"
    }
  },
  "Mappings": {
    "UbuntuXenialAMI": {
      "us-west-1": {
        "AMI": "ami-b20542d2"
      },
      "us-east-1": {
        "AMI": "ami-ddf13fb0"
      },
      "eu-west-1": {
        "AMI": "ami-a4d44ed7"
      },
      "eu-central-1" {
        "AMI": "ami-fe408091"
      }
    }
  },
  "Resources": {
    "MadcoreClusterRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "policy-madcore-cluster",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeTags",
                    "ec2:DescribeInstances",
                    "ec2:StartInstances",
                    "ec2:StopInstances"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectAcl",
                    "s3:PutObject",
                    "s3:PutObjectAcl"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "S3BucketName"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "S3BucketName"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                     "Effect": "Allow",
                     "Action": [
                         "ec2:CreateRoute",
                         "ec2:DeleteRoute",
                         "ec2:ReplaceRoute",
                         "ec2:ModifyInstanceAttribute"
                     ],
                     "Resource": [
                         "*"
                     ]
               },
               {
                     "Effect": "Allow",
                     "Action": [
                         "ec2:DescribeRouteTables",
                         "ec2:DescribeInstances"
                     ],
                     "Resource": "*"
               }
              ]
            }
          }
        ]
      }
    },
    "MadcoreClusterInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "MadcoreClusterRole"
          }
        ]
      }
    },
    "MadcoreClusterSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Provides Madcore Cluster access",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SG-madcore-cluster"
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": {
              "Ref": "SecurityGroupCIRD"
            }
          },
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" :  "0.0.0.0/0"},
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "443", "CidrIp" :  "0.0.0.0/0"},
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" :  "10.99.101.0/24"  },
          { "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" :  "10.99.101.0/24"  },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" :  "10.99.101.0/24"  },
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" :  "172.16.0.0/16"  },
          { "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" :  "172.16.0.0/16"  },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" :  "172.16.0.0/16"  }
        ]
      }
    },
    "MadcoreClusterAutoScalingLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "ImageId": {
          "Fn::FindInMap": [
            "UbuntuXenialAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "IamInstanceProfile": {
          "Ref": "MadcoreClusterInstanceProfile"
        },
        "SecurityGroups": [
          {
            "Ref": "MadcoreClusterSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SpotPrice": {
          "Ref": "SpotPrice"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sdk",
            "Ebs": {
              "VolumeSize": "20"
            }
          }
        ],
        "KeyName": {"Ref": "KeyName"},
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "# Madcore Kubernetes Node Pre Configure\n",
                "# Maintained by Madcore Ltd (humans@madcore.ai)\n",
                "sudo echo ENV=AWS >> /etc/environment\n",
                "sudo echo KUB_MASTER_IP=", {"Ref": "MasterIP"}, " >> /etc/environment\n",
                "sudo echo KUB_CLUSTER_NAME=", "spark", " >> /etc/environment\n",
                "sudo echo S3_BUCKET=", {"Ref": "S3BucketName"}, " >> /etc/environment\n",
                "sudo apt update -y && sudo apt install -y python python-pip && sudo pip install awscli\n",
                "aws s3 sync s3://",{"Ref": "S3BucketName"},"/backup/kubernetes/ /opt/backup/kubernetes/ --region ",{"Ref": "AWS::Region"},"\n",
                "aws s3 sync s3://",{"Ref": "S3BucketName"},"/backup/ssh/ /opt/backup/ssh/ --region ",{"Ref": "AWS::Region"},"\n",
                "# PRECONFIGURE madcore\n",
                "sudo apt-get update\n",
                "sudo apt-get install git -y\n",
                "sudo mkdir -p /opt/madcore\n",
                "sudo chown ubuntu:ubuntu /opt/madcore\n",
                "git clone -b ", {"Ref": "BranchName"}, " https://github.com/madcore-ai/core.git /opt/madcore\n",
                "pushd /opt/madcore\n",
                "git fetch\n",
                "git --no-pager log -50 --pretty=oneline\n",
                "git reset --hard ", {"Ref": "CommitID"}, "\n",
                "git --no-pager log -1\n",
                "popd\n",
                "sudo chmod +x /opt/madcore/kubernetes/cluster/node-install.sh\n",
                "sudo \"/opt/madcore/kubernetes/cluster/node-install.sh\"\n"
              ]
            ]
          }
        }
      }
    },
    "MadcoreClusterAutoScalingServerGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchConfigurationName": {
          "Ref": "MadcoreClusterAutoScalingLaunchConfiguration"
        },
        "MinSize": {"Ref": "MinSize"},
        "MaxSize": {"Ref": "MaxSize"},
        "DesiredCapacity": {"Ref": "DesiredCapacity"},
        "VPCZoneIdentifier": [
          {
            "Ref": "PublicNetZoneA"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "MADCORE-Spark-Node",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Cluster",
            "Value": "MADCORE-Spark",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  },
  "Outputs": {
    "MinSize": {
      "Value": {
        "Ref": "MinSize"
      }
    },
    "MaxSize": {
      "Value": {
        "Ref": "MaxSize"
      }
    },
    "DesiredCapacity": {
      "Value": {
        "Ref": "DesiredCapacity"
      }
    },
    "AutoScalingGroupName": {
      "Value": {
        "Ref": "MadcoreClusterAutoScalingServerGroup"
      }
    }
  }
}
